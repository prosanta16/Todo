{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","addItem","bind","handleInput","preventDefault","newItem","this","setState","Date","now","filteredItems","filter","console","log","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,I,2BCqCGA,MA/BlB,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEzB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAU,SAACC,GACVZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAGxC,+BACQ,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAASC,QAAS,WACpEhB,EAAMiB,WAAWb,EAAKI,cAXOJ,EAAKI,QAoBvC,OACC,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,K,eCxBTmB,IAAQC,IAAIC,K,IA8EGC,E,kDA1Eb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAQ,CACXtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,oDAcVf,GACNA,EAAEiB,iBACF,IAAMC,EAAUC,KAAKP,MAAMC,YAC3B,GAAmB,KAAhBK,EAAQpB,KAAW,CACpB,IAAMR,EAAK,sBAAO6B,KAAKP,MAAMtB,OAAlB,CAAyB4B,IACtCC,KAAKC,SAAS,CACZ9B,MAAOA,EACPuB,YAAY,CACVf,KAAK,GACLF,IAAI,S,kCAKEI,GACVmB,KAAKC,SAAS,CACZP,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAKyB,KAAKC,W,iCAIL1B,GACT,IAAM2B,EAAeJ,KAAKP,MAAMtB,MAAMkC,QAAO,SAAAhC,GAAI,OAC/CA,EAAKI,MAAMA,KACbuB,KAAKC,SAAS,CACZ9B,MAAOiC,M,gCAIDzB,EAAKF,GACb6B,QAAQC,IAAI,SAASP,KAAKP,MAAMtB,OAChC,IAAMA,EAAQ6B,KAAKP,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZ6B,QAAQC,IAAIlC,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,MAGfqB,KAAKC,SAAS,CACZ9B,MAAOA,M,+BAIX,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,YAAYgC,SAAUR,KAAKL,QAApC,UACE,uBAAOpB,KAAK,OAAOkC,YAAY,aAAa/B,MAAOsB,KAAKP,MAAMC,YAAYf,KAAMC,SAAUoB,KAAKH,cAC/F,wBAAQtB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAO6B,KAAKP,MAAMtB,MAAOe,WAAYc,KAAKd,WAAaJ,UAAWkB,KAAKlB,mB,GAnEtE4B,aCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0fbfa22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n   {\r\n       return <div className=\"list\" key={item.key}>\r\n           <p>\r\n               <input type=\"text\" \r\n               id={item.key} \r\n               value={item.text}\r\n               onChange={(e)=>{\r\n                props.setUpdate(e.target.value,item.key)}}\r\n                />\r\n\r\n            <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon=\"trash\"  onClick={() => {\r\n            props.deleteItem(item.key)\r\n        }}/>\r\n            </span>\r\n          </p>\r\n\r\n           \r\n       </div>\r\n   })\r\n    \r\n       return(\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n        </FlipMove>\r\n   \r\n       )\r\n   }\r\n   export default ListItems;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n    }\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <header>\n        <form id=\"todo-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter task\" value={this.state.currentItem.text} onChange={this.handleInput}/>\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItems items={this.state.items} deleteItem={this.deleteItem}  setUpdate={this.setUpdate}></ListItems>\n    </div>\n  );\n}\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}